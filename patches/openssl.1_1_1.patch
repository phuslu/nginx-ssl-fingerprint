diff --git a/include/openssl/ssl.h b/include/openssl/ssl.h
index b744f6ccc1..a6aefe8051 100644
--- a/include/openssl/ssl.h
+++ b/include/openssl/ssl.h
@@ -1275,6 +1275,8 @@ DECLARE_PEM_rw(SSL_SESSION, SSL_SESSION)
 # define SSL_CTRL_SET_SIGALGS                    97
 # define SSL_CTRL_SET_SIGALGS_LIST               98
 # define SSL_CTRL_CERT_FLAGS                     99
+# define SSL_CTRL_GET_TLSEXT_EXTENSIONS          233
+# define SSL_CTRL_GET_RAW_GROUPS                 234
 # define SSL_CTRL_CLEAR_CERT_FLAGS               100
 # define SSL_CTRL_SET_CLIENT_SIGALGS             101
 # define SSL_CTRL_SET_CLIENT_SIGALGS_LIST        102
diff --git a/include/openssl/tls1.h b/include/openssl/tls1.h
index 76d9fda46e..a29114f215 100644
--- a/include/openssl/tls1.h
+++ b/include/openssl/tls1.h
@@ -131,6 +131,15 @@ extern "C" {
 /* ExtensionType value from RFC7627 */
 # define TLSEXT_TYPE_extended_master_secret      23
 
+/* ExtensionType value from RFC6961 */
+# define TLSEXT_TYPE_status_request_v2           17
+/* [draft-ietf-tls-certificate-compression] */
+# define TLSEXT_TYPE_compress_certificate        27
+/* ExtensionType value from RFC8449 */
+# define TLSEXT_TYPE_record_size_limit           28
+/* ExtensionType value from RFC7639 */
+# define TLSEXT_TYPE_application_settings        17513
+
 /* ExtensionType value from RFC4507 */
 # define TLSEXT_TYPE_session_ticket              35
 
diff --git a/ssl/s3_lib.c b/ssl/s3_lib.c
index 32f9b25710..870d313997 100644
--- a/ssl/s3_lib.c
+++ b/ssl/s3_lib.c
@@ -3731,6 +3731,43 @@ long ssl3_ctrl(SSL *s, int cmd, long larg, void *parg)
             return (int)s->ext.peer_ecpointformats_len;
         }
 #endif
+    case SSL_CTRL_GET_TLSEXT_EXTENSIONS:
+        {
+            /* Extensions */
+            unsigned short *data = parg;
+            RAW_EXTENSION *ext;
+            size_t num = 0, i;
+
+            if (s->clienthello == NULL) {
+                return 0;
+            }
+
+            for (i = 0; i < s->clienthello->pre_proc_exts_len; i++) {
+                ext = s->clienthello->pre_proc_exts + i;
+                if (ext->present)
+                    num++;
+            }
+
+            if (data != NULL) {
+                for (i = 0; i < s->clienthello->pre_proc_exts_len; i++) {
+                    ext = s->clienthello->pre_proc_exts + i;
+                    if (ext->present) {
+                        if (ext->received_order >= num)
+                            break;
+                        data[ext->received_order] = (unsigned short)ext->type;
+                    }
+                }
+            }
+
+            return num*2;
+        }
+    case SSL_CTRL_GET_RAW_GROUPS:
+        {
+            if (parg) {
+                *(unsigned char **)parg = s->ext.peer_supportedgroups;
+            }
+            return (int)s->ext.peer_supportedgroups_len;
+        }
 
     default:
         break;
diff --git a/ssl/ssl_local.h b/ssl/ssl_local.h
index 4c36cd5c89..ac0ec97b65 100644
--- a/ssl/ssl_local.h
+++ b/ssl/ssl_local.h
@@ -714,6 +714,10 @@ typedef enum tlsext_index_en {
     TLSEXT_IDX_cryptopro_bug,
     TLSEXT_IDX_early_data,
     TLSEXT_IDX_certificate_authorities,
+    TLSEXT_IDX_status_request_v2,
+    TLSEXT_IDX_compress_certificate,
+    TLSEXT_IDX_record_size_limit,
+    TLSEXT_IDX_application_settings,
     TLSEXT_IDX_padding,
     TLSEXT_IDX_psk,
     /* Dummy index - must always be the last entry */
diff --git a/ssl/statem/extensions.c b/ssl/statem/extensions.c
index 0f39275baa..7cb1e62287 100644
--- a/ssl/statem/extensions.c
+++ b/ssl/statem/extensions.c
@@ -377,6 +377,38 @@ static const EXTENSION_DEFINITION ext_defs[] = {
         tls_construct_certificate_authorities,
         tls_construct_certificate_authorities, NULL,
     },
+    {
+        TLSEXT_TYPE_status_request_v2,
+        SSL_EXT_CLIENT_HELLO,
+        NULL,
+        NULL, NULL,
+        NULL,
+        NULL, NULL,
+    },
+    {
+        TLSEXT_TYPE_compress_certificate,
+        SSL_EXT_CLIENT_HELLO,
+        NULL,
+        NULL, NULL,
+        NULL,
+        NULL, NULL,
+    },
+    {
+        TLSEXT_TYPE_record_size_limit,
+        SSL_EXT_CLIENT_HELLO,
+        NULL,
+        NULL, NULL,
+        NULL,
+        NULL, NULL,
+    },
+    {
+        TLSEXT_TYPE_application_settings,
+        SSL_EXT_CLIENT_HELLO,
+        NULL,
+        NULL, NULL,
+        NULL,
+        NULL, NULL,
+    },
     {
         /* Must be immediately before pre_shared_key */
         TLSEXT_TYPE_padding,
